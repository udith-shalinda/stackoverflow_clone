{"version":3,"sources":["components/test.js","redux/actions/UserLogin.js","redux/actions/color.js","components/header/Header.js","components/auth/LoginPage.js","components/auth/SignUpPage.js","redux/reducers/user/userId.js","redux/reducers/profile/profileData.js","redux/reducers/color/color.js","redux/reducers/user/usertoken.js","redux/reducers/questions/AllQuestions.js","redux/reducers/totalpages/TotalPages.js","redux/reducers/totalpages/CurrentPage.js","redux/reducers/index.js","redux/store/index.js","components/question/QuestionProfileDetails.js","components/websocket/StompClient.js","redux/actions/AllQuestions.js","components/question/QuestionPreview.js","components/home/pagination/Pagination.js","components/home/Home.js","components/question/addQuestion/AddQuestion.js","components/question/votes/Votes.js","components/question/editAnswer/EditAnswer.js","components/question/oneQuestion/OneAnswer.js","components/question/addAnswer/AddAnswer.js","components/question/oneQuestion/comment/CommentPreview.js","components/question/oneQuestion/OneQuestion.js","components/profile/Profile.js","components/question/editQuestion/EditQuestion.js","App.js","serviceWorker.js","index.js"],"names":["stompClient","Test","useEffect","sock","SockJS","Stomp","over","onopen","console","log","connect","frame","subscribe","greeting","componentWillMount","onClick","send","setUserId","id","type","userId","setUserToken","token","changeTheamColor","number","colorCount","useStyles","makeStyles","theme","root","flexGrow","backgroundColor","title","display","breakpoints","up","search","position","borderRadius","shape","fade","palette","common","white","marginLeft","width","spacing","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","padding","transition","transitions","create","link","textDecoration","state","userState","colorState","props","classes","useState","isSearching","setIsSearch","searchInput","setSearchInput","colors","className","AppBar","style","theamColor","Toolbar","Typography","variant","noWrap","to","InputBase","placeholder","input","inputProps","onChange","event","target","value","IconButton","Grid","container","item","Avatar","aria-label","avatar","Button","React","password","email","showPassword","redirect","values","setValues","isloading","setloading","errorEmail","setErrorEmail","errorPassword","setErrorPassword","lastLocation","useLastLocation","handleChange","prop","loginHandler","a","userData","axios","post","res","data","userDetailsId","status","Card","theamFontColor","contentBackgroundColor","TextField","error","label","name","autoComplete","margin","InputProps","InputLabelProps","endAdornment","InputAdornment","edge","onMouseDown","preventDefault","CircularProgress","disableShrink","size","thickness","fontColor","LoginButton","pathname","confirmPassword","difPassword","setDifPassword","handleClickShowPassword","handleMouseDownPassword","signUpHandler","e","userDetailsData","votes","profilePictureLink","userDetailsRes","signUpButton","action","profileDataState","profileData","payload","grey","bodyBackgroundColor","indigo","initialState","userToken","questionState","questions","Object","assign","map","question","index","totalPages","pages","currentPage","combineReducers","middlewares","thunk","composeWithEnhancer","composeWithDevTools","applyMiddleware","configureStore","createStore","reducer","QuestionProfileDetails","alt","src","getStompClient","getAllQuestions","pageSize","dispatch","get","allQuestions","questionPreviewResponseList","message","getOneQuestionById","oneQuestion","subscribeProfile","voters","answerCount","description","createrId","userVotes","profileLink","setPages","handlePagination","page","disabled","questiondata","setQuestionData","pageState","setPageState","length","key","createrDetails","pagination","subscribeVotes","addQuestionHandler","questionDetails","config","headers","Axios","Votes","upVote","disabledButton","upVoted","downVote","downVoted","answer","getOneAnswer","UpdateAnswerHandler","answerData","put","questionId","setEditAnswer","editAnswer","doAnswerUpvote","voter","answerVotes","doAnswerDownvote","deleteAnswerHandler","answerId","markAnswerHandler","markEneble","marked","createrName","createrVotes","createrProfileLink","addAnswerHandler","answerIdData","resTwo","setAnswerStateHandler","CommentPreview","comment","userName","withRouter","useParams","addAnswerState","setAnswerState","OneQuestion","setOneQuestion","someOneAddingAnswer","setsomeOneAddAnswer","questionComment","setQuestionComment","inputComment","setInputComment","getOneQuestion","body","doQuestionUpvote","doQuestionDownvote","editDeleteButtonHander","deleteQuestionHandler","commentButtonHandler","addCommentQuestion","Question","answerIdList","commentClass","showComments","comments","answerList","answerVoters","markAnswer","Profile","setProfileData","myQuestionList","setMyQuestionList","getProfileData","getMyQuestions","xs","CardHeader","subheader","CardContent","editQuestionHandler","store","getState","PrivateRoute","Component","component","rest","render","App","exact","path","AddQuestion","EditQuestion","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fde50ee1.chunk.js","sourcesContent":["import React,{useEffect} from 'react';\r\nimport SockJS from 'sockjs-client';\r\nimport Stomp from 'stompjs';\r\n\r\nlet stompClient = null;\r\n\r\nfunction Test() {\r\n\r\n    const componentWillMount=() =>{\r\n      var sock = new SockJS('http://localhost:8102/api/ws');\r\n      stompClient = Stomp.over(sock);\r\n      sock.onopen = function() {\r\n          console.log('open');\r\n      }\r\n      stompClient.connect({}, function (frame) {\r\n        console.log('Connected: ' + frame);\r\n        stompClient.subscribe('/topic/public', function (greeting) {\r\n           \r\n            console.log(greeting);\r\n        });\r\n        stompClient.subscribe('/topic/user', function (greeting) {\r\n            \r\n            console.log(greeting);\r\n        });\r\n        stompClient.subscribe('/topic/user/udith', function (greeting) {\r\n            \r\n            console.log(greeting);\r\n        });\r\n        stompClient.subscribe('/topic/user/121232323', function (greeting) {\r\n            \r\n            console.log(greeting);\r\n        });\r\n      });\r\n     \r\n    }\r\n    const send = ()=>{\r\n      stompClient.send(\"/app/addUser\", {},\"fusdfsd\");\r\n      stompClient.send(\"/app/test\", {},\"udith\");\r\n      stompClient.send(\"/app/test/one/121232323\", {});\r\n\r\n    }\r\n    \r\n      useEffect(()=>{\r\n        componentWillMount();\r\n      })\r\n\r\n  return (\r\n    <div >\r\n      <h1>hello there</h1>\r\n      <button onClick={send}>send</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Test;\r\n","export const setUserId = (id)=>({\r\n    type:'SET_USER_ID',\r\n    userId:id,\r\n})\r\n\r\nexport const setUserToken = (token)=>({\r\n    type:'SET_USER_TOKEN',\r\n    token:token,\r\n})\r\n","export const changeTheamColor = (number)=>({\r\n    type:'CHANGE_THEAM',\r\n    colorCount:number,\r\n})\r\n\r\n","import React, { useState } from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport InvertColorsIcon from '@material-ui/icons/InvertColors';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { Avatar, Button, Grid } from '@material-ui/core';\r\nimport {Link} from 'react-router-dom';\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\nimport {Redirect} from 'react-router'\r\n\r\n//redux\r\nimport { connect } from 'react-redux'\r\nimport { setUserId,setUserToken } from '../../redux/actions/UserLogin';\r\nimport {changeTheamColor} from '../../redux/actions/color';\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor:\"grey\"\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n    color:'white'\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    width: theme.spacing(7),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 7),\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: 120,\r\n      '&:focus': {\r\n        width: 200,\r\n      },\r\n    },\r\n  },\r\n  link:{\r\n    textDecoration:'none',\r\n    color:'white'\r\n  }\r\n}));\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const Header=(props) =>{\r\n\r\n\r\n  const classes = useStyles();\r\n  const [isSearching,setIsSearch] = useState(false);\r\n  const [searchInput,setSearchInput] = useState('');\r\n  let colors = props.colorState.colors[props.colorState.colorCount];\r\n\r\n\r\n\r\n\r\n\r\n  const search=prop =>  event =>{\r\n    setIsSearch(true);\r\n    setSearchInput(event.target.value);\r\n  }\r\n  const searchHandler = ()=>{\r\n    if(isSearching){\r\n      return(\r\n        <Redirect to={'/search/'+searchInput} /> \r\n      );\r\n    }else{\r\n      return null;\r\n    }\r\n  }\r\n  const handleTheame = ()=>{\r\n    props.changeTheamColor((props.colorState.colorCount+1)%2);\r\n  }\r\n\r\n  const logginButtonHandler=()=>{ \r\n    if(props.userState.userId != null){\r\n      return (\r\n        <div>\r\n          <Grid container>\r\n            <Grid item>\r\n              <IconButton>\r\n                <Link to=\"/addQuestion\" className={classes.link}>\r\n                  <AddBoxIcon />\r\n                </Link>\r\n              </IconButton>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link to={\"/profile/\"+props.userState.userId} className={classes.link}>\r\n                <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                  R\r\n                </Avatar>\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      )\r\n    }else{\r\n      return(<div>\r\n        <Link to=\"/login\" className={classes.link}>\r\n          <Button variant=\"contained\"  \r\n                        style={{color:'white', backgroundColor:colors.theamColor}} color=\"primary\">Login</Button>\r\n          </Link>\r\n          <Link to=\"/signUp\" className={classes.link}>\r\n            <Button  variant=\"contained\"\r\n                         style={{color:'white', backgroundColor:colors.theamColor}}  color=\"primary\">Sign up</Button>\r\n          </Link>\r\n      </div>)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\"  style={{ backgroundColor:colors.theamColor}} color=\"primary\">\r\n        <Toolbar>\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            <Link to=\"/home\" className={classes.link}>\r\n              Stackoverflow\r\n            </Link>\r\n          </Typography>\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Search…\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n              onChange={ search('sfs')}\r\n            />\r\n          </div>\r\n          <IconButton>\r\n            <InvertColorsIcon style={{ color:\"white\" }} onClick={handleTheame}/>\r\n          </IconButton>\r\n          {logginButtonHandler()}\r\n          {searchHandler()}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return { \r\n    userState: state.userId,\r\n    colorState:state.colorState,\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { setUserId,setUserToken,changeTheamColor}\r\n)(Header)\r\n\r\n// export default Header;","import React, { useState }  from 'react';\r\nimport axios from 'axios';\r\nimport {Redirect} from 'react-router'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {Button,CircularProgress} from '@material-ui/core';\r\nimport Card from '@material-ui/core/Card';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { useLastLocation } from 'react-router-last-location';\r\n\r\nimport './Login.css'\r\n\r\n//redux\r\nimport { connect } from 'react-redux'\r\nimport { setUserId,setUserToken } from '../../redux/actions/UserLogin';\r\n\r\n\r\nexport function Login(props){\r\n      const [values, setValues] = React.useState({\r\n        password: '',\r\n        email:'',\r\n        showPassword: false,\r\n        redirect: false\r\n      });\r\n      const [isloading,setloading] = useState('No');\r\n      const [errorEmail,setErrorEmail] = useState(false);\r\n      const [errorPassword,setErrorPassword] = useState(false);\r\n      let colors = props.colorState.colors[props.colorState.colorCount];\r\n\r\n    //logisnfsdfsffs\r\n    const lastLocation = useLastLocation();\r\n\r\n\r\n      const handleChange = prop => event => {\r\n        setValues({ ...values, [prop]: event.target.value });\r\n      };\r\n    \r\n      const handleClickShowPassword = () => {\r\n        setValues({ ...values, showPassword: !values.showPassword });\r\n      };\r\n    \r\n      const handleMouseDownPassword = event => {\r\n        event.preventDefault();\r\n      };\r\n      \r\n    \r\n    const loginHandler =  async ()=>{\r\n      setErrorEmail(false);\r\n      setErrorPassword(false);\r\n      setloading('Yes')\r\n        const userData = {\r\n          email:values.email,\r\n          password:values.password\r\n        }\r\n        try{\r\n          const res = await axios.post('http://localhost:8102/api/user/login',userData);\r\n          console.log(res.data.userDetailsId);  \r\n          if(res.status === 200){\r\n            setloading('Correct');\r\n            props.setUserId(res.data.userDetailsId);\r\n            props.setUserToken(res.data.token)\r\n              setValues({\r\n                ...values,\r\n                redirect:true\r\n              });\r\n            }else if(res.status === 203){\r\n              setloading(\"No\")\r\n              setErrorPassword(true)\r\n            }else {\r\n              setloading(\"No\")\r\n              setErrorEmail(true);\r\n            }\r\n        }catch(e){\r\n          console.log(e);\r\n          setloading(\"No\")\r\n         setErrorEmail(true);\r\n        }\r\n    }\r\n    const redirectHandler = () =>{\r\n\r\n      if(values.redirect){\r\n        if(lastLocation !== null){\r\n          return(\r\n            <Redirect to={lastLocation.pathname} /> \r\n          );\r\n        }else{\r\n          return(\r\n            <Redirect to='/'/> \r\n          )\r\n        }\r\n      }else{\r\n        return null;\r\n      }\r\n    }\r\n    const LoginButton = ()=>{\r\n      switch(isloading){\r\n        case \"Yes\":\r\n          return(\r\n            <CircularProgress\r\n              variant=\"indeterminate\"\r\n              disableShrink\r\n              size={26}\r\n              thickness={4}\r\n              {...props}\r\n              color={props.fontColor}\r\n            />\r\n          )\r\n        case \"Correct\":\r\n          return(\r\n            <DoneIcon/>\r\n          )\r\n        case \"Wrong\":\r\n          return(\r\n            <CloseIcon/>\r\n          )\r\n        default:\r\n          return(\r\n            \"Login\"\r\n          )\r\n      }\r\n    }\r\n    \r\n    \r\n    return (\r\n        <div className=\"login\">\r\n            <Card style={{color:colors.theamFontColor, backgroundColor:colors.contentBackgroundColor}}>\r\n                <div className=\"card\">\r\n                    <h2>Login</h2>\r\n                    <form>\r\n                        <TextField\r\n                            error={errorEmail}\r\n                            id=\"outlined-email-input\"\r\n                            label=\"Email\"\r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                            autoComplete=\"email\"\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                            value={values.email}\r\n                            onChange={handleChange('email')}\r\n                            className=\"textField\"\r\n                            style={{\r\n                                backgroundColor: colors.contentBackgroundColor,\r\n                                }}\r\n                                InputProps={{\r\n                                    style: {\r\n                                        color: colors.theamFontColor\r\n                                    }\r\n                                }}\r\n                                InputLabelProps={{\r\n                                  style:{\r\n                                    color:colors.theamFontColor,\r\n                                  }\r\n                                }}\r\n                        />\r\n                        <TextField\r\n                            error={errorPassword}\r\n                            id=\"outlined-adornment-password\"\r\n                            variant=\"outlined\"\r\n                            type={values.showPassword ? 'text' : 'password'}\r\n                            label=\"Password\"\r\n                            value={values.password}\r\n                            onChange={handleChange('password')}\r\n                            className=\"textField\"\r\n                            InputProps={{\r\n                              endAdornment: (\r\n                                <InputAdornment position=\"end\">\r\n                                  <IconButton\r\n                                    edge=\"end\"\r\n                                    aria-label=\"toggle password visibility\"\r\n                                    onClick={handleClickShowPassword}\r\n                                    onMouseDown={handleMouseDownPassword}\r\n                                    style={{color:colors.theamFontColor}}\r\n                                  >\r\n                                    {values.showPassword ? <VisibilityOff /> : <Visibility />}\r\n                                  </IconButton>\r\n                                </InputAdornment>\r\n                              ),\r\n                              style: {\r\n                                color: colors.theamFontColor\r\n                                }\r\n                            }}\r\n                            style={{\r\n                                backgroundColor: colors.contentBackgroundColor,\r\n                                }}\r\n                            InputLabelProps={{\r\n                                style:{\r\n                                    color:colors.theamFontColor,\r\n                                  }\r\n                            }}\r\n                        />\r\n                        <Button variant=\"contained\" id=\"button\" onClick={()=>loginHandler()} \r\n                        style={{color:colors.theamFontColor, backgroundColor:colors.contentBackgroundColor}}\r\n                        >{LoginButton()}</Button>\r\n                    </form>\r\n                </div>\r\n            </Card>\r\n            {redirectHandler()}\r\n        </div>\r\n    );\r\n}\r\n\r\n \r\n\r\nconst mapStateToProps = state => {\r\n  return { \r\n    userId: state.userId,\r\n    colorState:state.colorState,\r\n   };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { setUserId,setUserToken }\r\n)(Login)\r\n\r\n// export default Login;","import React, { useState }  from 'react';\r\nimport axios from 'axios';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {Button,CircularProgress} from '@material-ui/core';\r\nimport Card from '@material-ui/core/Card';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport {Redirect} from 'react-router'\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport './Login.css';\r\n\r\n//redux\r\nimport { connect } from 'react-redux'\r\nimport { setUserId,setUserToken } from '../../redux/actions/UserLogin';\r\n\r\n\r\n\r\nexport function SignUp(props){\r\n    const [values, setValues] = React.useState({\r\n        password: '',\r\n        email:'',\r\n        name:'',\r\n        confirmPassword:'',\r\n        showPassword: false,\r\n        redirect:false\r\n      });\r\n      const [isloading,setloading] = useState('No');\r\n      const [difPassword,setDifPassword] = useState(false);\r\n      let colors = props.colorState.colors[props.colorState.colorCount];\r\n\r\n\r\n\r\n\r\n\r\n    \r\n      const handleChange = prop => event => {\r\n        setValues({ ...values, [prop]: event.target.value });\r\n      };\r\n    \r\n      const handleClickShowPassword = () => {\r\n        setValues({ ...values, showPassword: !values.showPassword });\r\n      };\r\n    \r\n      const handleMouseDownPassword = event => {\r\n        event.preventDefault();\r\n      };\r\n    \r\n      const signUpButton = ()=>{\r\n        switch(isloading){\r\n          case \"Yes\":\r\n            return(\r\n              <CircularProgress\r\n                variant=\"indeterminate\"\r\n                disableShrink\r\n                size={26}\r\n                thickness={4}\r\n                {...props}\r\n                color={colors.theamFontColor}\r\n              />\r\n            )\r\n          case \"Correct\":\r\n            return(\r\n              <DoneIcon/>\r\n            )\r\n          case \"Wrong\":\r\n            return(\r\n              <CloseIcon/>\r\n            )\r\n          default:\r\n            return(\r\n              \"Sign Up\"\r\n            )\r\n        }\r\n      }\r\n\r\n    const signUpHandler = async (e)=>{\r\n      if(values.confirmPassword === values.password){\r\n        setloading('Yes')\r\n          const userDetailsData ={\r\n              name:values.name,\r\n              votes:0,\r\n              profilePictureLink:null\r\n          }\r\n          const userDetailsRes = await axios.post('http://localhost:8102/api/userDetails/save',userDetailsData);\r\n          console.log(userDetailsRes.data);\r\n      \r\n          const userData = {\r\n              email:values.email,\r\n              password:values.password,\r\n              userDetailsId:userDetailsRes.data\r\n          }\r\n          const res = await axios.post('http://localhost:8102/api/user/save',userData);\r\n          console.log(res.data);\r\n          if(res.status === 200){\r\n            props.setUserId(res.data.userDetailsId);\r\n            props.setUserToken(res.data.token);\r\n            setValues({\r\n                ...values,\r\n                redirect:true\r\n            })\r\n            setloading('Correct')\r\n          }else{\r\n            setloading('Worng')\r\n          }\r\n      }else{\r\n        setDifPassword(true);\r\n      }\r\n    }\r\n    const redirectHandler = () =>{\r\n        if(values.redirect){\r\n          return(\r\n            <Redirect to='/home' /> \r\n          );\r\n        }else{\r\n          return null;\r\n        }\r\n      }\r\n\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <Card style={{color:colors.theamFontColor, backgroundColor:colors.contentBackgroundColor}}>\r\n                <div className=\"card\">\r\n                    <h2>Sign Up</h2>\r\n                    <form>\r\n                        <TextField\r\n                            id=\"outlined-email-input\"\r\n                            label=\"Name\"\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                            className=\"textField\"\r\n                            onChange={handleChange('name')}\r\n                            style={{\r\n                                backgroundColor: colors.contentBackgroundColor,\r\n                                }}\r\n                                InputProps={{\r\n                                    style: {\r\n                                        color: colors.theamFontColor\r\n                                    }\r\n                                }}\r\n                                InputLabelProps={{\r\n                                  style:{\r\n                                    color:colors.theamFontColor,\r\n                                  }\r\n                                }}\r\n                        />\r\n                        <TextField\r\n                            id=\"outlined-email-input2\"\r\n                            label=\"Email\"\r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                            autoComplete=\"email\"\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                            className=\"textField\"\r\n                            onChange={handleChange('email')}\r\n                            style={{\r\n                                backgroundColor: colors.contentBackgroundColor,\r\n                                }}\r\n                                InputProps={{\r\n                                    style: {\r\n                                        color: colors.theamFontColor\r\n                                    }\r\n                                }}\r\n                                InputLabelProps={{\r\n                                  style:{\r\n                                    color:colors.theamFontColor,\r\n                                  }\r\n                                }}\r\n                        />\r\n                        <TextField\r\n                                id=\"outlined-adornment-password\"\r\n                                error={difPassword}\r\n                                variant=\"outlined\"\r\n                                type={values.showPassword ? 'text' : 'password'}\r\n                                label=\"Password\"\r\n                                value={values.password}\r\n                                onChange={handleChange('password')}\r\n                                className=\"textField\"\r\n                                InputProps={{\r\n                                endAdornment: (\r\n                                    <InputAdornment position=\"end\">\r\n                                    <IconButton\r\n                                        edge=\"end\"\r\n                                        aria-label=\"toggle password visibility\"\r\n                                        onClick={handleClickShowPassword}\r\n                                        onMouseDown={handleMouseDownPassword}\r\n                                    >\r\n                                        {values.showPassword ? <VisibilityOff /> : <Visibility />}\r\n                                    </IconButton>\r\n                                    </InputAdornment>\r\n                                ),\r\n                                style: {\r\n                                  color: colors.theamFontColor\r\n                                  }\r\n                                }}\r\n                                style={{\r\n                                    backgroundColor: colors.contentBackgroundColor,\r\n                                    }}\r\n                                InputLabelProps={{\r\n                                    style:{\r\n                                        color:colors.theamFontColor,\r\n                                      }\r\n                                }}\r\n                            />\r\n                            \r\n                        <TextField\r\n                                error={difPassword}\r\n                                id=\"outlined-adornment-password-confirm\"\r\n                                variant=\"outlined\"\r\n                                type={values.showPassword ? 'text' : 'password'}\r\n                                label=\"confirm-Password\"\r\n                                value={values.confirmPassword}\r\n                                onChange={handleChange('confirmPassword')}\r\n                                className=\"textField\"\r\n                                InputProps={{\r\n                                endAdornment: (\r\n                                    <InputAdornment position=\"end\">\r\n                                    <IconButton\r\n                                        edge=\"end\"\r\n                                        aria-label=\"toggle password visibility\"\r\n                                        onClick={handleClickShowPassword}\r\n                                        onMouseDown={handleMouseDownPassword}\r\n                                    >\r\n                                        {values.showPassword ? <VisibilityOff /> : <Visibility />}\r\n                                    </IconButton>\r\n                                    </InputAdornment>\r\n                                ),\r\n                                style: {\r\n                                  color: colors.theamFontColor\r\n                                  }\r\n                                }}\r\n                                style={{\r\n                                    backgroundColor: colors.contentBackgroundColor,\r\n                                    }}\r\n                                InputLabelProps={{\r\n                                    style:{\r\n                                        color:colors.theamFontColor,\r\n                                      }\r\n                                }}\r\n                            />\r\n                        <Button  variant=\"contained\" id=\"button\" onClick={signUpHandler} \r\n                        style={{color:colors.theamFontColor, backgroundColor:colors.contentBackgroundColor}}>{signUpButton()}</Button>\r\n                    </form>\r\n                </div>\r\n            </Card>\r\n            {redirectHandler()}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return { \r\n    userId: state.userId,\r\n    colorState:state.colorState,\r\n   };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { setUserId,setUserToken }\r\n)(SignUp)\r\n\r\n// export default SignUp;","const userId = (state = {userId:null},action)=>{\r\n    switch(action.type){\r\n        case 'SET_USER_ID':\r\n            return{\r\n                userId:action.userId\r\n            }   \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default userId","const profileDataState = (state = {profileData:null},action)=>{\r\n    switch(action.type){\r\n        case 'GET_PROFILE_DATA':\r\n            return{\r\n                profileData:action.payload.profileData\r\n            }  \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default profileDataState","import { grey, indigo } from '@material-ui/core/colors';\r\n\r\nlet colors = [{\r\n    theamColor:grey[900],\r\n    theamFontColor:grey[50],\r\n    bodyBackgroundColor:grey[800],\r\n    contentBackgroundColor:grey[900],\r\n},{\r\n    theamColor:indigo[900],\r\n    theamFontColor:grey[900],\r\n    bodyBackgroundColor:grey[50],\r\n    contentBackgroundColor:grey[50],\r\n}]\r\n\r\nconst initialState = {\r\n  colorCount:0,\r\n  colors:colors,\r\n}\r\n\r\nexport const colorState = (state = initialState,action)=>{\r\n    switch(action.type){\r\n        case 'CHANGE_THEAM':\r\n            return{\r\n                colorCount:action.colorCount,\r\n                colors:colors\r\n            } \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default colorState;\r\n\r\n","const userToken = (state = {token:null},action)=>{\r\n    switch(action.type){\r\n        case 'SET_USER_TOKEN':\r\n            return{\r\n                token:action.token\r\n            }   \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default userToken","const questionState = (state = {questions:null},action)=>{\r\n    switch(action.type){\r\n        case 'GET_ALL_QUESTIONS':\r\n            return{\r\n                questions:action.questions\r\n            }\r\n        case 'UPDATE_ONE_QUESTION':\r\n                return Object.assign({}, state, {\r\n                    questions: state.questions.map((question, index) => {\r\n                      if (index === action.payload.index) {\r\n                        return Object.assign({}, question, {\r\n                          ...action.payload.question\r\n                        })\r\n                      }\r\n                      return question\r\n                    })\r\n                  }) \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default questionState","const totalPages = (state = {pages:0},action)=>{\r\n    switch(action.type){\r\n        case 'GET_TOTAL_PAGES':\r\n            return{\r\n                pages:action.pages\r\n            }  \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default totalPages","const currentPage = (state = {currentPage:1},action)=>{\r\n    switch(action.type){\r\n        case 'GET_CURRENT_PAGE':\r\n            return{\r\n                currentPage:action.currentPage\r\n            }  \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default currentPage","import { combineReducers } from 'redux'\r\nimport userId from './user/userId'\r\nimport profileDataState from './profile/profileData'\r\nimport colorState from './color/color'\r\nimport userToken from './user/usertoken'\r\nimport questionState from './questions/AllQuestions'\r\nimport totalPages from './totalpages/TotalPages'\r\nimport currentPage from './totalpages/CurrentPage'\r\n\r\n\r\n\r\nexport default combineReducers({\r\n    userId,\r\n    userToken,\r\n    profileDataState,\r\n    colorState,\r\n    questionState,\r\n    totalPages,\r\n    currentPage\r\n  })","import reducer from '../reducers'\r\nimport thunk from \"redux-thunk\";\r\nimport { createStore,applyMiddleware } from 'redux'\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nconst middlewares = [thunk];\r\n\r\nconst composeWithEnhancer = composeWithDevTools(\r\n        applyMiddleware(...middlewares)\r\n      )\r\n\r\n\r\nexport const configureStore = createStore(\r\n    reducer,\r\n    composeWithEnhancer\r\n  );\r\n  export default configureStore;\r\n  ","import React from 'react'\r\nimport { Avatar } from '@material-ui/core';\r\n\r\nimport './Question.css'\r\n\r\nconst QuestionProfileDetails =(props)=>{\r\n    return(\r\n        <div className=\"profilePart\" onClick={()=>{console.log(\"profile clicked\")}}>\r\n            <div className=\"avatar\">\r\n                <Avatar  alt=\"Remy Sharp\" src=\"https://image.shutterstock.com/image-photo/bright-spring-view-cameo-island-260nw-1048185397.jpg\"  />\r\n            </div>\r\n            <div className=\"profileDetails\">\r\n                <p>{props.name}</p>\r\n                <p>{props.votes}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default QuestionProfileDetails;","import SockJS from 'sockjs-client';\r\nimport Stomp from 'stompjs';\r\n\r\nexport const getStompClient=()=>{\r\n    var sock = new SockJS('http://localhost:8102/api/ws');\r\n    var stompClient = Stomp.over(sock);\r\n    sock.onopen = function() {\r\n        console.log('open');\r\n    }\r\n    stompClient.connect({}, function (frame) {\r\n        console.log('Connected: ' + frame);\r\n    });\r\n    return stompClient;\r\n}\r\n\r\nexport const subscribeProfile=(stompClient,updateProfle)=>{\r\n    stompClient.subscribe('/topic/user/home', function (res) {\r\n        console.log(res.body);\r\n        updateProfle();\r\n    });\r\n}\r\n","import axios from 'axios';\r\n\r\nexport const getAllQuestions = (currentPage,pageSize) =>  async dispatch=>{\r\n    try{\r\n        const allQuestions = await axios.get('http://localhost:8102/api/question/getAllQuestions/'+currentPage+'/'+pageSize);\r\n            console.log(allQuestions.data);\r\n        dispatch({\r\n            type:'GET_ALL_QUESTIONS',\r\n            questions:allQuestions.data.questionPreviewResponseList \r\n        })\r\n        dispatch({\r\n            type:'GET_TOTAL_PAGES',\r\n            pages:allQuestions.data.totalPages\r\n        })\r\n        dispatch({\r\n            type:'GET_CURRENT_PAGE',\r\n            currentPage:currentPage+1\r\n        })\r\n        return allQuestions.data.questionPreviewResponseList;\r\n    }catch(err){\r\n        return err.message;\r\n    }\r\n    \r\n};\r\n\r\n\r\nexport const getOneQuestionById = (id,index) =>  async dispatch=>{\r\n    try{\r\n        const oneQuestion = await axios.get('http://localhost:8102/api/question/getOneQuestionPreview/'+id);\r\n            console.log(oneQuestion.data);\r\n        dispatch({\r\n            type:'UPDATE_ONE_QUESTION',\r\n            payload:{\r\n                question:oneQuestion.data,\r\n                index:index\r\n            } \r\n        })\r\n    }catch(err){\r\n        return err.message;\r\n    } \r\n};","import React, { useEffect } from 'react'\r\nimport { Card } from '@material-ui/core'\r\nimport {Link} from 'react-router-dom';\r\nimport QuestionProfileDetails from './QuestionProfileDetails';\r\nimport { getStompClient } from '../websocket/StompClient';\r\n\r\nimport './Question.css'\r\n\r\n//redux\r\nimport { connect } from 'react-redux'\r\nimport { getOneQuestionById } from '../../redux/actions/AllQuestions';\r\n\r\nconst QuestionPreview =(props)=>{\r\n\r\n    useEffect(()=>{\r\n        subscribeProfile(); \r\n    },[])\r\n\r\n    const subscribeProfile=()=>{\r\n        const stompClient = getStompClient();\r\n        stompClient.connect({}, function (frame) {\r\n          console.log('Connected: ' + frame);\r\n          stompClient.subscribe('/topic/user/question/'+props.id, function (res) {\r\n                props.getOneQuestionById(props.id,props.index)\r\n              console.log(\"question change detected\");\r\n          });\r\n        });\r\n    }\r\n\r\n\r\n    return(\r\n        <div >\r\n            <Card className=\"questionCard\">\r\n                <div className=\"question\">\r\n                    <div className=\"content votes\">\r\n                        <div >\r\n                            <p>{props.voters}</p>\r\n                            <p>votes</p>\r\n                        </div>\r\n                        <div>\r\n                            <p>{props.answerCount}</p>\r\n                            <p>answers</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"content questionPart\">\r\n                        <Link to={'/oneQuestion/'+props.id} className=\"link\" >\r\n                            <div>\r\n                                <h2>{props.question}</h2>\r\n                                <p>{props.description}</p>\r\n                            </div>\r\n                        </Link>\r\n                        <Link to={'/profile/'+props.createrId} className=\"link\" >\r\n                            <QuestionProfileDetails name={props.name} votes={props.userVotes} profileLink={props.profileLink}/>\r\n                        </Link> \r\n                    </div>\r\n                </div>\r\n            </Card>\r\n            \r\n            <br></br>\r\n        </div>\r\n    );\r\n}\r\n\r\n// export default QuestionPreview;\r\n\r\n  \r\n  export default connect(\r\n    null,\r\n    { getOneQuestionById}\r\n  )(QuestionPreview)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { IconButton, Button } from '@material-ui/core'\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\n\r\n//redux\r\nimport { connect } from 'react-redux'\r\nimport {getAllQuestions} from '../../../redux/actions/AllQuestions'\r\n\r\n\r\nimport './Pagination.css'\r\n\r\nexport const Pagination=(props)=>{\r\n    const [pages,setPages] = useState(1);\r\n\r\n    useEffect(()=>{\r\n        setPages(props.currentPage);\r\n    },[props.currentPage])\r\n\r\n    const handlePagination=(page)=>{\r\n        props.getAllQuestions(page-1,1)\r\n    }\r\n    \r\n    return(\r\n        <div className=\"paginationButtonSet\">\r\n            <IconButton onClick={()=>{handlePagination(pages-1)}} disabled={pages===1?true:false}>\r\n                <NavigateBeforeIcon></NavigateBeforeIcon>\r\n            </IconButton>\r\n                <h3>{pages}</h3>\r\n            <IconButton onClick={()=>{handlePagination(pages+1)}} disabled={pages===props.totalPages?true:false}>\r\n                <NavigateNextIcon></NavigateNextIcon>\r\n            </IconButton>\r\n        </div>\r\n    )\r\n}\r\n\r\n// export default Pagination;\r\nconst mapStateToProps = state => {\r\n    return { \r\n      colorState:state.colorState,\r\n      totalPages:state.totalPages.pages,\r\n      currentPage:state.currentPage.currentPage,\r\n     };\r\n  };\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    { getAllQuestions }\r\n  )(Pagination)\r\n","import React, { useEffect, useState } from 'react'\r\nimport QuestionPreview from '../question/QuestionPreview';\r\nimport SockJS from 'sockjs-client';\r\nimport Stomp from 'stompjs';\r\nimport Pagination from './pagination/Pagination'\r\n\r\n//redux\r\nimport { connect } from 'react-redux'\r\nimport { setUserId } from '../../redux/actions/UserLogin';\r\nimport {getAllQuestions} from '../../redux/actions/AllQuestions'\r\n\r\n\r\nconst Home =(props)=>{\r\n\r\n    const [questiondata,setQuestionData] = useState(null);\r\n    const [pageState,setPageState] = useState({\r\n        currentPage:0,\r\n        pageSize:2\r\n    });\r\n\r\n    useEffect(()=>{\r\n        getAllQuestions();\r\n    },[])\r\n\r\n    const getAllQuestions=async ()=>{\r\n        if(props.allQuestions === null){\r\n            setQuestionData(await props.getAllQuestions(pageState.currentPage,pageState.pageSize));\r\n            console.log(questiondata);\r\n        }else{\r\n            setQuestionData(props.allQuestions);\r\n            console.log(questiondata);\r\n        }\r\n    }\r\n    \r\n\r\n    const questionPreview = ()=>{\r\n        if(props.allQuestions!== null && props.allQuestions.length>=1){\r\n            return props.allQuestions.map((question,index)=>{\r\n                return(\r\n                    <div key={question.id}>\r\n                        <QuestionPreview \r\n                            id={question.id}\r\n                            index={index}\r\n                            question={question.question} \r\n                            description={question.description} \r\n                            createrId={question.createrId}\r\n                            name={question.createrDetails.name}\r\n                            userVotes = {question.createrDetails.votes}\r\n                            profileLink={question.createrDetails.profilePictureLink}\r\n                            voters = {question.voters}\r\n                            answerCount = {question.answerCount}\r\n                        />\r\n                    </div>\r\n                ) \r\n            })\r\n        }else{\r\n            return <div>loading .....</div>;\r\n        }\r\n    }\r\n    const pagination = ()=>{\r\n        if(questiondata!== null && questiondata.length>=1){\r\n            return(\r\n                <Pagination currentPage={pageState.currentPage} setPageState={setPageState}></Pagination>\r\n            )\r\n        }\r\n    }\r\n   \r\n    return(\r\n        <div>\r\n            <br></br>\r\n           {questionPreview()}\r\n           <br></br>\r\n           {pagination()}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return { \r\n      userId: state.userId.userId,\r\n      token:state.userToken.token,\r\n      colorState:state.colorState,\r\n      allQuestions:state.questionState.questions\r\n     };\r\n  };\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    { setUserId,getAllQuestions }\r\n  )(Home)\r\n\r\n// export default Home;","import React, { useEffect } from 'react'\r\nimport { Card, Button } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {Redirect} from 'react-router'\r\nimport SockJS from 'sockjs-client';\r\nimport Stomp from 'stompjs';\r\n\r\nimport './AddQuestion.css'\r\n\r\n//redux\r\nimport { connect } from 'react-redux'\r\nimport { setUserId } from '../../../redux/actions/UserLogin';\r\nimport Axios from 'axios';\r\n\r\n\r\nlet stompClient = null;\r\n\r\nconst AddQuestion =(props)=>{\r\n    useEffect(()=>{\r\n        subscribeVotes();\r\n    },[])\r\n\r\n    const subscribeVotes=()=>{\r\n        var sock = new SockJS('http://localhost:8102/api/ws');\r\n      stompClient = Stomp.over(sock);\r\n      sock.onopen = function() {\r\n          console.log('open');\r\n      }\r\n      stompClient.connect({}, function (frame) {\r\n        console.log('Connected: ' + frame);\r\n      });\r\n    }\r\n\r\n    const [values, setValues] = React.useState({\r\n        question:'',\r\n        description:'',\r\n        redirect:false\r\n      });\r\n    let colors = props.colorState.colors[props.colorState.colorCount];\r\n\r\n    const handleChange = prop => event => {\r\n    setValues({ ...values, [prop]: event.target.value });\r\n    };\r\n    \r\n    const redirectHandler = ()=>{\r\n        if(values.redirect){\r\n            return(\r\n              <Redirect to='/home' /> \r\n            );\r\n          }else{\r\n            return null;\r\n          }\r\n    }\r\n    const addQuestionHandler = async ()=>{\r\n        const questionDetails={\r\n            question:values.question,\r\n            description:values.description,\r\n            createrId:props.userId,\r\n        }\r\n        let config = {\r\n            headers: {\r\n                \"Authorization\":\"Bearer \" + props.token,\r\n            }\r\n          }\r\n        \r\n        try{\r\n            const res = await Axios.post('http://localhost:8102/api/question/save',questionDetails,config);\r\n            console.log(res.data);  \r\n            setValues({\r\n                ...values,\r\n                redirect:true,\r\n            })\r\n            stompClient.send(\"/app/question/home/\"+\"props.questionId\", {});\r\n        }catch(e){\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n\r\n    return(\r\n        <div className=\"bd\">\r\n            <Card style={{color: colors.theamFontColor,backgroundColor:colors.contentBackgroundColor}} className=\"inputCard\">\r\n                <h2 className=\"addQuestion\">Add Question</h2>\r\n            <form>\r\n                <TextField\r\n                    id=\"outlined-email-input\"\r\n                    label=\"Question\"\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    margin=\"normal\"\r\n                    variant=\"outlined\"\r\n                    className=\"textField\"\r\n                    onChange={handleChange('question')}\r\n                    style={{\r\n                        backgroundColor: colors.bodyBackgroundColor,\r\n                        }}\r\n                        InputProps={{\r\n                            style: {\r\n                                color: colors.theamFontColor\r\n                            }\r\n                        }}\r\n                        InputLabelProps={{\r\n                            style:{\r\n                            color:colors.theamFontColor,\r\n                            }\r\n                        }}\r\n                />\r\n                <TextField\r\n                    id=\"outlined-email-input3\"\r\n                    label=\"Description\"\r\n                    type=\"text\"\r\n                    name=\"Description\"\r\n                    margin=\"normal\"\r\n                    variant=\"outlined\"\r\n                    className=\"textField\"\r\n                    onChange={handleChange('description')}\r\n                    style={{\r\n                        backgroundColor: colors.bodyBackgroundColor,\r\n                        }}\r\n                        InputProps={{\r\n                            style: {\r\n                                color: colors.theamFontColor\r\n                            }\r\n                        }}\r\n                        InputLabelProps={{\r\n                            style:{\r\n                            color:colors.theamFontColor,\r\n                            }\r\n                        }}\r\n                    />\r\n                    <Button  variant=\"contained\" id=\"button\" \r\n                        style={{color:colors.theamFontColor, backgroundColor:colors.bodyBackgroundColor}}\r\n                        onClick={addQuestionHandler}\r\n                    >Add Question</Button>\r\n                </form>\r\n            </Card>\r\n            {redirectHandler()}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return { \r\n      userId: state.userId.userId,\r\n      token:state.userToken.token,\r\n      colorState:state.colorState,\r\n     };\r\n  };\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    { setUserId }\r\n  )(AddQuestion)\r\n// export default AddQuestion;","import React from 'react'\r\nimport { IconButton } from '@material-ui/core';\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport ThumbDownIcon from '@material-ui/icons/ThumbDown';\r\n\r\nconst Votes=(props)=>{\r\n    return(\r\n        <div >\r\n            <IconButton onClick={props.upVote} disabled={props.disabledButton}>\r\n                <ThumbUpIcon style={{color:props.upVoted?\"red\":\"black\"}}></ThumbUpIcon>\r\n            </IconButton>\r\n            <p>{props.votes}</p>\r\n            <IconButton onClick={props.downVote} disabled={props.disabledButton}>\r\n                <ThumbDownIcon style={{color:props.downVoted?\"red\":\"black\"}}></ThumbDownIcon>\r\n            </IconButton>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Votes","import React, { useEffect, useState } from 'react'\r\nimport { Card, Button } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport SockJS from 'sockjs-client';\r\nimport Stomp from 'stompjs';\r\n\r\n\r\n//redux\r\nimport { connect } from 'react-redux'\r\nimport { setUserId } from '../../../redux/actions/UserLogin';\r\nimport Axios from 'axios';\r\n\r\nlet stompClient = null;\r\n\r\nconst EditAnswer = (props)=>{\r\n    let id = props.id;\r\n    const [values, setValues] = useState({\r\n        answer:'',\r\n        description:'',\r\n        redirect:false\r\n      });\r\n    let config = {\r\n        headers: {\r\n            \"Authorization\":\"Bearer \" + props.token,\r\n        }\r\n    }\r\n    let colors = props.colorState.colors[props.colorState.colorCount];\r\n\r\n    useEffect(()=>{\r\n        subscribeVotes();\r\n        getOneAnswer();\r\n    },[])\r\n\r\n    const getOneAnswer = async ()=>{\r\n        try{\r\n            const res = await Axios.get('http://localhost:8102/api/answer/getOneAnswer/'+id,config);\r\n            console.log(res.data);  \r\n            setValues({\r\n                ...values,\r\n                answer:res.data.answer,\r\n                description:res.data.description\r\n            });\r\n        }catch(e){\r\n            console.log(e);\r\n        }\r\n    }\r\n    const subscribeVotes=()=>{\r\n        var sock = new SockJS('http://localhost:8102/api/ws');\r\n        stompClient = Stomp.over(sock);\r\n        sock.onopen = function() {\r\n            console.log('open');\r\n        }\r\n        stompClient.connect({}, function (frame) {\r\n            console.log('Connected: ' + frame);\r\n        });\r\n    }\r\n\r\n    const handleChange = prop => event => {\r\n    setValues({ ...values, [prop]: event.target.value });\r\n    };\r\n\r\n    const UpdateAnswerHandler=async()=>{\r\n        let config = {\r\n            headers: {\r\n                \"Authorization\":\"Bearer \" + props.token,\r\n            }\r\n        }\r\n        const answerData = {\r\n            answer:values.answer,\r\n            description:values.description,\r\n        }\r\n        try{\r\n            const res = await Axios.put('http://localhost:8102/api/answer/update/'+id,answerData,config);\r\n            console.log(res.data);  \r\n            stompClient.send(\"/app/question/home/\"+props.questionId, {});\r\n            stompClient.send(\"/app/question/votes/\"+props.questionId, {});\r\n            props.setEditAnswer(false);\r\n        }catch(e){\r\n            console.log(e);\r\n        }\r\n    }\r\n    \r\n\r\n    return(\r\n        <div className=\"addAnswerCard\">\r\n            <Card style={{color: colors.theamFontColor,backgroundColor:colors.contentBackgroundColor}} >\r\n                <h2 className=\"addAnswer\">Add Answer</h2>\r\n            <form>\r\n                <TextField\r\n                    id=\"outlined-email-input\"\r\n                    label=\"Answer\"\r\n                    value={values.answer}\r\n                    type=\"text\"\r\n                    name=\"Answer\"\r\n                    margin=\"normal\"\r\n                    variant=\"outlined\"\r\n                    className=\"textField\"\r\n                    onChange={handleChange('answer')}\r\n                    style={{\r\n                        backgroundColor: colors.bodyBackgroundColor,\r\n                        }}\r\n                        InputProps={{\r\n                            style: {\r\n                                color: colors.theamFontColor\r\n                            }\r\n                        }}\r\n                        InputLabelProps={{\r\n                            style:{\r\n                            color:colors.theamFontColor,\r\n                            }\r\n                        }}\r\n                />\r\n                <TextField\r\n                    id=\"outlined-email-input3\"\r\n                    label=\"Description\"\r\n                    value={values.description}\r\n                    type=\"text\"\r\n                    name=\"Description\"\r\n                    margin=\"normal\"\r\n                    variant=\"outlined\"\r\n                    className=\"textField\"\r\n                    onChange={handleChange('description')}\r\n                    style={{\r\n                        backgroundColor: colors.bodyBackgroundColor,\r\n                        }}\r\n                        InputProps={{\r\n                            style: {\r\n                                color: colors.theamFontColor\r\n                            }\r\n                        }}\r\n                        InputLabelProps={{\r\n                            style:{\r\n                            color:colors.theamFontColor,\r\n                            }\r\n                        }}\r\n                    />\r\n                    <Button  variant=\"contained\" id=\"button\" \r\n                        style={{color:colors.theamFontColor, backgroundColor:colors.bodyBackgroundColor}}\r\n                        onClick={UpdateAnswerHandler}\r\n                    >Add Answer</Button>\r\n                </form>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return { \r\n      userId: state.userId.userId,\r\n      token:state.userToken.token,\r\n      colorState:state.colorState,\r\n     };\r\n  };\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    { setUserId }\r\n  )(EditAnswer)","import React, { useState } from 'react';\r\nimport QuestionProfileDetails from '../QuestionProfileDetails';\r\nimport Votes from '../votes/Votes'\r\nimport { Card, Button, IconButton } from '@material-ui/core';\r\nimport Axios from 'axios';\r\nimport DoneOutlineIcon from '@material-ui/icons/DoneOutline';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\n\r\n//redux\r\nimport { connect } from 'react-redux'\r\nimport { setUserId } from '../../../redux/actions/UserLogin';\r\nimport EditAnswer from '../editAnswer/EditAnswer';\r\n\r\n\r\n\r\nconst OneAnswer = (props)=>{\r\n    const [editAnswer,setEditAnswer] = useState(false);\r\n\r\n    const doAnswerUpvote=async ()=>{\r\n        console.log(\"upvote clicked\");\r\n        let config = {\r\n            headers: {\r\n                \"Authorization\":\"Bearer \" + props.token,\r\n            }\r\n        }\r\n        const voter ={\r\n            userId:props.userId\r\n        }\r\n        try{\r\n            const res = await Axios.put('http://localhost:8102/api/answer/addUpVoter/'+props.id,voter,config);\r\n            console.log(res.data);  \r\n            if(res.data !== props.answerVotes){\r\n                props.stompClient.send(\"/app/question/votes/\"+props.questionId, {});\r\n                props.stompClient.send(\"/app/question/home/\"+props.questionId, {});\r\n                props.stompClient.send(\"/app/profile/votes/\"+props.createrId,{})\r\n            }  \r\n        }catch(e){\r\n            console.log(e);\r\n        }\r\n    } \r\n    const doAnswerDownvote=async ()=>{\r\n        console.log(\"downvote clicked\");\r\n        let config = {\r\n            headers: {\r\n                \"Authorization\":\"Bearer \" + props.token,\r\n            }\r\n        }\r\n        const voter ={\r\n            userId:props.userId\r\n        }\r\n        try{\r\n            const res = await Axios.put('http://localhost:8102/api/answer/addDownVoter/'+props.id,voter,config);\r\n            console.log(res.data);  \r\n            if(res.data !== props.answerVotes){\r\n                props.stompClient.send(\"/app/question/votes/\"+props.questionId, {});\r\n                props.stompClient.send(\"/app/question/home/\"+props.questionId, {});\r\n                props.stompClient.send(\"/app/profile/votes/\"+props.createrId,{})\r\n            }  \r\n        }catch(e){\r\n            console.log(e);\r\n        }\r\n    }\r\n    const editDeleteButtonHander=()=>{\r\n        if(props.disabledButton){\r\n            return(\r\n                <div>\r\n                    <Button onClick={()=>{setEditAnswer(!editAnswer)}}>Edit</Button>\r\n                    <Button onClick={deleteAnswerHandler}>Delete</Button>\r\n                </div>\r\n            )\r\n        }else{\r\n            return(\r\n                null\r\n            )\r\n        }\r\n    }\r\n    const deleteAnswerHandler = async()=>{\r\n        let config = {\r\n            headers: {\r\n                \"Authorization\":\"Bearer \" + props.token,\r\n            }\r\n        }\r\n        const questionId ={\r\n            answerId:props.questionId\r\n        }\r\n        const res = await Axios.post('http://localhost:8102/api/answer/delete/'+props.id,questionId,config);\r\n        console.log(res.data);\r\n        props.stompClient.send(\"/app/question/votes/\"+props.questionId, {});\r\n        props.stompClient.send(\"/app/question/home/\"+props.questionId, {});\r\n    }\r\n    const markAnswerHandler=async()=>{\r\n        let config = {\r\n            headers: {\r\n                \"Authorization\":\"Bearer \" + props.token,\r\n            }\r\n        }\r\n        const answerId ={\r\n            answerId:props.id\r\n        }\r\n        const res = await Axios.put('http://localhost:8102/api/question/updateMarkedAnswer/'+props.questionId,answerId,config);\r\n        console.log(res.data);\r\n        props.stompClient.send(\"/app/question/votes/\"+props.questionId, {});\r\n        props.stompClient.send(\"/app/question/home/\"+props.questionId, {});\r\n    }\r\n\r\n\r\n    const answerOrEditAnswer = ()=>{\r\n        if(!editAnswer){\r\n            return(\r\n                <div className=\"question\">\r\n                    <div className=\"content votes\">\r\n                        <Votes\r\n                            id={props.id} \r\n                            votes={props.answerVotes}\r\n                            upVote={doAnswerUpvote}\r\n                            downVote={doAnswerDownvote}\r\n                            upVoted={props.upVoted}\r\n                            downVoted={props.downVoted}\r\n                            disabledButton={props.disabledButton}\r\n                        />\r\n                        <IconButton disabled={props.markEneble} onClick={markAnswerHandler}>\r\n                            <DoneOutlineIcon style={{color:props.marked?\"green\":\"black\"}}></DoneOutlineIcon>\r\n                        </IconButton>\r\n                    </div>\r\n                    <div className=\"content\">\r\n                        <h2>{props.answer}</h2>\r\n                        <p>{props.description}</p>\r\n                        <Link to={'/profile/'+props.createrId} className=\"link\" >\r\n                            <QuestionProfileDetails\r\n                                name={props.createrName}\r\n                                votes={props.createrVotes}\r\n                                profileLink={props.createrProfileLink}\r\n                            />\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }else{\r\n            return(\r\n                <EditAnswer id={props.id} questionId={props.questionId} setEditAnswer={setEditAnswer}></EditAnswer>\r\n            )\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <Card className=\"oneAnswerCard\">\r\n                    {answerOrEditAnswer()}\r\n                    {editDeleteButtonHander()}\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return { \r\n      userId: state.userId.userId,\r\n      token:state.userToken.token,\r\n      colorState:state.colorState,\r\n     };\r\n  };\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    { setUserId }\r\n  )(OneAnswer)","import React, { useEffect } from 'react'\r\nimport { Card, Button } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport './AddAnswer.css'\r\n//redux\r\nimport { connect } from 'react-redux'\r\nimport { setUserId } from '../../../redux/actions/UserLogin';\r\nimport Axios from 'axios';\r\n\r\n\r\n\r\nconst AddAnswer = (props)=>{\r\n    const [values, setValues] = React.useState({\r\n        answer:'',\r\n        description:'',\r\n        redirect:false\r\n      });\r\n    let colors = props.colorState.colors[props.colorState.colorCount];\r\n\r\n    useEffect(()=>{\r\n        props.stompClient.send(\"/app/question/addAnswer/\"+props.questionId, {},props.userId);\r\n    },[])\r\n\r\n    const handleChange = prop => event => {\r\n    setValues({ ...values, [prop]: event.target.value });\r\n    };\r\n\r\n    const addAnswerHandler=async()=>{\r\n        let config = {\r\n            headers: {\r\n                \"Authorization\":\"Bearer \" + props.token,\r\n            }\r\n        }\r\n        const answerData = {\r\n            answer:values.answer,\r\n            description:values.description,\r\n            createrId:props.userId,\r\n        }\r\n        let answerId='';\r\n        try{\r\n            const res = await Axios.post('http://localhost:8102/api/answer/save',answerData,config);\r\n            console.log(res.data);  \r\n            answerId = res.data;\r\n        }catch(e){\r\n            console.log(e);\r\n        }\r\n        const answerIdData={\r\n            answerId:answerId\r\n        }\r\n        try{\r\n            const resTwo = await Axios.put('http://localhost:8102/api/question/addAnswer/'+props.questionId,answerIdData,config);\r\n            console.log(resTwo.data); \r\n            if(resTwo.data !== null){\r\n                props.stompClient.send(\"/app/question/votes/\"+props.questionId, {});\r\n                props.stompClient.send(\"/app/question/home/\"+props.questionId, {});\r\n                props.setAnswerStateHandler();\r\n            } \r\n        }catch(e){\r\n            console.log(e);\r\n        }\r\n    }\r\n    \r\n\r\n    return(\r\n        <div className=\"addAnswerCard\">\r\n            <Card style={{color: colors.theamFontColor,backgroundColor:colors.contentBackgroundColor}} >\r\n                <h2 className=\"addAnswer\">Add Answer</h2>\r\n            <form>\r\n                <TextField\r\n                    id=\"outlined-email-input\"\r\n                    label=\"Answer\"\r\n                    type=\"text\"\r\n                    name=\"Answer\"\r\n                    margin=\"normal\"\r\n                    variant=\"outlined\"\r\n                    className=\"textField\"\r\n                    onChange={handleChange('answer')}\r\n                    style={{\r\n                        backgroundColor: colors.bodyBackgroundColor,\r\n                        }}\r\n                        InputProps={{\r\n                            style: {\r\n                                color: colors.theamFontColor\r\n                            }\r\n                        }}\r\n                        InputLabelProps={{\r\n                            style:{\r\n                            color:colors.theamFontColor,\r\n                            }\r\n                        }}\r\n                />\r\n                <TextField\r\n                    id=\"outlined-email-input3\"\r\n                    label=\"Description\"\r\n                    type=\"text\"\r\n                    name=\"Description\"\r\n                    margin=\"normal\"\r\n                    variant=\"outlined\"\r\n                    className=\"textField\"\r\n                    onChange={handleChange('description')}\r\n                    style={{\r\n                        backgroundColor: colors.bodyBackgroundColor,\r\n                        }}\r\n                        InputProps={{\r\n                            style: {\r\n                                color: colors.theamFontColor\r\n                            }\r\n                        }}\r\n                        InputLabelProps={{\r\n                            style:{\r\n                            color:colors.theamFontColor,\r\n                            }\r\n                        }}\r\n                    />\r\n                    <Button  variant=\"contained\" id=\"button\" \r\n                        style={{color:colors.theamFontColor, backgroundColor:colors.bodyBackgroundColor}}\r\n                        onClick={addAnswerHandler}\r\n                    >Add Answer</Button>\r\n                </form>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return { \r\n      userId: state.userId.userId,\r\n      token:state.userToken.token,\r\n      colorState:state.colorState,\r\n     };\r\n  };\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    { setUserId }\r\n  )(AddAnswer)","import React from 'react'\r\nimport { Card } from '@material-ui/core'\r\n\r\nexport const CommentPreview=(props)=>{\r\n\r\n    return(\r\n        <div>\r\n            <Card>\r\n                <p>{props.comment+\" - \"+props.userName}</p>\r\n            </Card>\r\n        </div>\r\n    )    \r\n}","import React, { useState, useEffect } from 'react'\r\nimport { Card, Button, CircularProgress, TextField } from '@material-ui/core';\r\nimport QuestionProfileDetails from '../QuestionProfileDetails';\r\nimport Votes from '../votes/Votes'\r\nimport OneAnswer from './OneAnswer';\r\nimport AddAnswer from '../addAnswer/AddAnswer'\r\nimport {useParams,withRouter} from \"react-router-dom\";\r\nimport Axios from 'axios';\r\nimport '../Question.css'\r\nimport SockJS from 'sockjs-client';\r\nimport Stomp from 'stompjs';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\n//redux\r\nimport { connect } from 'react-redux'\r\nimport { setUserId } from '../../../redux/actions/UserLogin';\r\nimport { CommentPreview } from './comment/CommentPreview';\r\n\r\n\r\n\r\nlet stompClient = null;\r\n\r\n\r\nconst OneQuestion =(props)=>{\r\n    let { id } = useParams();\r\n    const [addAnswerState,setAnswerState] = useState(false);\r\n    const [OneQuestion,setOneQuestion] = useState(null);\r\n    const [someOneAddingAnswer, setsomeOneAddAnswer] = useState(null);\r\n    const [questionComment,setQuestionComment] = useState(false);\r\n    const [inputComment,setInputComment]=useState('');\r\n    let config = {\r\n        headers: {\r\n            \"Authorization\":\"Bearer \" + props.token,\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getOneQuestion();\r\n        subscribeVotes();\r\n    },[])\r\n    \r\n\r\n    const subscribeVotes=()=>{\r\n        var sock = new SockJS('http://localhost:8102/api/ws');\r\n      stompClient = Stomp.over(sock);\r\n      sock.onopen = function() {\r\n          console.log('open');\r\n      }\r\n      stompClient.connect({}, function (frame) {\r\n        console.log('Connected: ' + frame);\r\n        stompClient.subscribe('/topic/user/question/'+id, function (greeting) {\r\n            getOneQuestion();\r\n            console.log(greeting);\r\n            \r\n        });\r\n        stompClient.subscribe('/topic/user/addAnswer/'+id, function (res) {\r\n            console.log(\"addding a answer \"+res.body);\r\n            setsomeOneAddAnswer(res.body);\r\n        });\r\n      });\r\n    }\r\n\r\n\r\n    const getOneQuestion = async ()=>{\r\n        const userDetailsId = {\r\n            userId:props.userId\r\n        }\r\n        try{\r\n            const res = await Axios.post('http://localhost:8102/api/question/getOneQuestion/'+id,userDetailsId,config);\r\n            console.log(res.data);  \r\n            setOneQuestion(res.data);\r\n        }catch(e){\r\n            console.log(e);\r\n        }\r\n    }\r\n    \r\n    const addAnswerHandler = ()=>{\r\n        if(addAnswerState){\r\n            return(\r\n               <AddAnswer \r\n                    questionId={OneQuestion.id}\r\n                    getOneQuestion={getOneQuestion}\r\n                    stompClient={stompClient}\r\n                    setAnswerState={setAnswerStateHandler}\r\n                /> \r\n            )\r\n        }else{\r\n            return(\r\n                <Button onClick={()=>{setAnswerState(true)}}>Add Answer</Button>\r\n            )\r\n        }\r\n    }\r\n    const setAnswerStateHandler=()=>{\r\n        setAnswerState(false);\r\n    }\r\n\r\n    const doQuestionUpvote=async ()=>{\r\n        console.log(\"upvote clicked\");\r\n        \r\n        const voter ={\r\n            userId:props.userId\r\n        }\r\n        try{\r\n            const res = await Axios.put('http://localhost:8102/api/question/addUpVoter/'+id,voter,config);\r\n            console.log(res.data);  \r\n            if(res.data !== OneQuestion.voters){\r\n                stompClient.send(\"/app/question/votes/\"+id, {});\r\n                stompClient.send(\"/app/question/home/\"+id, {});\r\n                stompClient.send(\"/app/profile/votes/\"+OneQuestion.createrId,{})\r\n\r\n                setsomeOneAddAnswer(null)\r\n            }\r\n        }catch(e){\r\n            console.log(e);\r\n        }\r\n    } \r\n    const doQuestionDownvote=async ()=>{\r\n        console.log(\"downvote clicked\");\r\n        const voter ={\r\n            userId:props.userId\r\n        }\r\n        try{\r\n            const res = await Axios.put('http://localhost:8102/api/question/addDownVoter/'+id,voter,config);\r\n            console.log(res.data);\r\n            if(res.data !== OneQuestion.voters){\r\n                stompClient.send(\"/app/question/votes/\"+id, {});\r\n                stompClient.send(\"/app/question/home/\"+id, {});\r\n                stompClient.send(\"/app/profile/votes/\"+OneQuestion.createrId,{})\r\n            }  \r\n        }catch(e){\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    const showAnswers = ()=>{\r\n        if(OneQuestion.answerList !== null){\r\n            if(OneQuestion.answerList.length >0){\r\n                return OneQuestion.answerList.map((answer)=>{\r\n                    return(\r\n                        <div key={answer.id}>\r\n                            <OneAnswer\r\n                                id={answer.id} \r\n                                answer={answer.answer}\r\n                                description={answer.description}\r\n                                answerVotes = {answer.answerVoters}\r\n                                createrName={answer.createrDetails.name}\r\n                                createrVotes ={answer.createrDetails.votes}\r\n                                createrId={answer.createrId}\r\n                                createrProfileLink={answer.createrDetails.profilePictureLink}\r\n                                upVoted={answer.upVoted}\r\n                                downVoted={answer.downVoted}\r\n                                stompClient={stompClient}\r\n                                questionId={id}\r\n                                disabledButton={answer.createrId===props.userId?true:false}\r\n                                markEneble={OneQuestion.createrId=== props.userId?false:true}\r\n                                marked={OneQuestion.markAnswer===answer.id?true:false}\r\n                            ></OneAnswer>\r\n                            <br/>\r\n                        </div>\r\n                    )\r\n                });\r\n            }\r\n        }else{\r\n            return(\r\n                <p>No answers is posted!!</p>\r\n            )\r\n        }\r\n    }\r\n\r\n    const indicateAddingAnswer= ()=>{\r\n        if(someOneAddingAnswer !== null){\r\n            if(someOneAddingAnswer !== props.userId){\r\n               return(\r\n                   <div>some one is typing</div>\r\n               )\r\n            }else{\r\n                return null;\r\n            }\r\n        }else{\r\n            return null;\r\n        }\r\n    }\r\n\r\n    const showQuestion=()=>{\r\n        if(OneQuestion!== null){\r\n            return(\r\n                <Card className=\"questionCard\">\r\n                <div className=\"question\">\r\n                    <div className=\"content votes\">\r\n                        <Votes\r\n                            id={OneQuestion.id} \r\n                            votes={OneQuestion.voters}\r\n                            upVote={doQuestionUpvote}\r\n                            downVote={doQuestionDownvote}\r\n                            upVoted={OneQuestion.upVoted}\r\n                            downVoted={OneQuestion.downVoted}\r\n                            disabledButton={OneQuestion.createrId=== props.userId?true:false}\r\n                        />\r\n                    </div>\r\n                    <div className=\"content\">\r\n                        <h2>{OneQuestion.question}</h2>\r\n                        <p>{OneQuestion.description}</p>\r\n                        <Link to={'/profile/'+OneQuestion.createrId} className=\"link\" >\r\n                            <QuestionProfileDetails \r\n                                name={OneQuestion.createrDetails.name} \r\n                                votes={OneQuestion.createrDetails.votes} \r\n                                profileLink={OneQuestion.createrDetails.profileLink}/>\r\n                        </Link>\r\n                        {showComments()}\r\n                        {commentButtonHandler()}\r\n                        {editDeleteButtonHander()}\r\n                        {indicateAddingAnswer()}\r\n                        {showAnswers()}\r\n                        {addAnswerHandler()}\r\n                    </div>\r\n                </div>\r\n            </Card>\r\n            )\r\n        }else{\r\n            return(\r\n                <CircularProgress\r\n                    variant=\"indeterminate\"\r\n                    disableShrink\r\n                    size={26}\r\n                    thickness={4}\r\n                    {...props}\r\n                    color={props.fontColor}\r\n                    />\r\n            )\r\n        }\r\n    }\r\n    const editDeleteButtonHander=()=>{\r\n        if(props.userId === OneQuestion.createrId){\r\n            return(\r\n                <div>\r\n                    <Link to={'/editQuestion/'+id} className=\"link\" >\r\n                        <Button>Edit</Button>\r\n                    </Link>\r\n                    <Button onClick={deleteQuestionHandler}>Delete</Button>\r\n                </div>\r\n            )\r\n        }else{\r\n            return(\r\n                null\r\n            )\r\n        }\r\n    }\r\n    const commentButtonHandler=()=>{\r\n        if(questionComment){\r\n            return(\r\n                <div>\r\n                    <TextField\r\n                    id=\"outlined-email-input3\"\r\n                    label=\"inputComment\"\r\n                    type=\"text\"\r\n                    name=\"inputComment\"\r\n                    margin=\"normal\"\r\n                    variant=\"outlined\"\r\n                    className=\"textField\"\r\n                    onChange={(event)=>setInputComment(event.target.value)}\r\n                    />\r\n                    <Button onClick={addCommentQuestion}>Add</Button>\r\n                </div>\r\n            )\r\n        }else{\r\n            return(\r\n                <Button onClick={()=>{setQuestionComment(true)}}>Add comment</Button>\r\n            )\r\n        }\r\n    }\r\n    const deleteQuestionHandler = async()=>{\r\n        let Question={\r\n            answerIdList:OneQuestion.answerIdList,\r\n        }\r\n        const res = await Axios.post('http://localhost:8102/api/question/delete/'+id,Question,config);\r\n        console.log(res.data);\r\n    }\r\n\r\n    const addCommentQuestion=async()=>{\r\n        let commentClass={\r\n            comment:inputComment,\r\n            userId:props.userId,\r\n        }\r\n        const res = await Axios.post('http://localhost:8102/api/comment/addToQuestion/'+id,commentClass,config);\r\n        console.log(res.data);\r\n        setQuestionComment(false)\r\n        stompClient.send(\"/app/question/votes/\"+id, {});\r\n    }\r\n    const showComments=()=>{\r\n        if(OneQuestion){\r\n            if(OneQuestion.comments !== null){\r\n                return OneQuestion.comments.map((comment)=>{\r\n                    return(\r\n                        <CommentPreview comment={comment.comment} userName={comment.userId}></CommentPreview>\r\n                    )\r\n                })\r\n            }else{\r\n                return(\r\n                    <p>No comments yet!!</p>\r\n                )\r\n            }\r\n        }else{\r\n            return null;\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return(\r\n        <div>\r\n           {showQuestion()} \r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return { \r\n      userId: state.userId.userId,\r\n      token:state.userToken.token,\r\n      colorState:state.colorState,\r\n     };\r\n  };\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    { setUserId }\r\n  )(withRouter(OneQuestion))\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Card, CardHeader, Grid, CardContent } from '@material-ui/core'\r\nimport {useParams} from \"react-router-dom\";\r\n\r\n\r\n//redux\r\nimport { connect } from 'react-redux'\r\nimport { setUserId,setUserToken } from '../../redux/actions/UserLogin';\r\nimport {changeTheamColor} from '../../redux/actions/color';\r\nimport Axios from 'axios';\r\nimport { getStompClient} from '../websocket/StompClient';\r\n\r\nlet stompClient=null;\r\n\r\n export const Profile = (props)=>{\r\n   const {id} =useParams();\r\n   const [profileData,setProfileData]= useState(null);\r\n   const [myQuestionList,setMyQuestionList]= useState(null);\r\n\r\n   useEffect(()=>{\r\n    getProfileData();\r\n    getMyQuestions();\r\n    stompClient = getStompClient();\r\n    subscribeProfile();\r\n   },[])\r\n\r\n   const getProfileData=async ()=>{ \r\n    try{\r\n        const res = await Axios.get('http://localhost:8102/api/userDetails/getUserDetailsById/'+id);\r\n        console.log(res.data); \r\n        setProfileData(res.data); \r\n    }catch(e){\r\n        console.log(e);\r\n    }\r\n  }\r\n  const subscribeProfile=()=>{\r\n    stompClient.connect({}, function (frame) {\r\n      console.log('Connected: ' + frame);\r\n      stompClient.subscribe('/topic/user/profile/'+id, function (res) {\r\n          getProfileData();\r\n          console.log(res.body);\r\n      });\r\n    });\r\n}\r\n  const getMyQuestions=async()=>{\r\n    try{\r\n      const res = await Axios.get('http://localhost:8102/api/question/getSomeOnesQuestion/'+id);\r\n      console.log(res.data);\r\n      setMyQuestionList(res.data); \r\n    }catch(e){\r\n        console.log(e);\r\n    }\r\n  }\r\n  const renderMyQuestionList =()=>{\r\n    if(myQuestionList !== null){\r\n      if(myQuestionList.length>0){\r\n        return(\r\n          myQuestionList.map((question)=>{\r\n            return(\r\n              <Card key={question.id}>\r\n                <CardContent>{question.question}</CardContent>\r\n              </Card>\r\n            )\r\n          })\r\n        )\r\n      }else{\r\n        return(\r\n          <Card>\r\n            <p>No questions yet</p>\r\n          </Card>\r\n        )\r\n      }\r\n    }else{\r\n      return(\r\n        <div>loading.....</div>\r\n      )\r\n    }\r\n  } \r\n  \r\n    const renderProfileData = ()=>{\r\n      if(profileData !== null){\r\n        return(\r\n          <div>\r\n            <Grid container>\r\n          <Grid item xs={4}>\r\n              <Card >\r\n              <img src={profileData.profilePictureLink===null?\"https://image.shutterstock.com/image-photo/bright-spring-view-cameo-island-260nw-1048185397.jpg\":profileData.profilePictureLink}/>\r\n              <CardHeader\r\n                  title={profileData.name}\r\n                  subheader={\"Votes : \"+profileData.votes}\r\n                  // subheaderTypographyProps={{color:props.fontColor}}\r\n              />\r\n              </Card>\r\n          </Grid>\r\n          <Grid item xs={6} >\r\n              {renderMyQuestionList()}\r\n          </Grid>\r\n      </Grid>\r\n          </div>\r\n        )\r\n      }else{\r\n        return(\r\n          <p>loading ......</p>\r\n        )\r\n      }\r\n    }\r\n    return(\r\n        <div>\r\n          {renderProfileData()}  \r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return { \r\n      userId: state.userId.userId,\r\n      colorState:state.colorState,\r\n    };\r\n  };\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    { setUserId,setUserToken,changeTheamColor}\r\n  )(Profile)\r\n// export default Profile;","import React, { useEffect } from 'react'\r\nimport { Card, Button } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {useParams,withRouter} from \"react-router-dom\";\r\nimport SockJS from 'sockjs-client';\r\nimport Stomp from 'stompjs';\r\n\r\n// import './AddQuestion.css'\r\n\r\n//redux\r\nimport { connect } from 'react-redux'\r\nimport { setUserId } from '../../../redux/actions/UserLogin';\r\nimport Axios from 'axios';\r\n\r\n\r\nlet stompClient = null;\r\n\r\nconst EditQuestion =(props)=>{\r\n    let { id } = useParams();\r\n    const [values, setValues] = React.useState({\r\n        question:'',\r\n        description:'',\r\n        redirect:false\r\n      });\r\n      let config = {\r\n        headers: {\r\n            \"Authorization\":\"Bearer \" + props.token,\r\n        }\r\n    }\r\n    let colors = props.colorState.colors[props.colorState.colorCount];\r\n\r\n\r\n    useEffect(()=>{\r\n        subscribeVotes();\r\n        getOneQuestion();\r\n    },[])\r\n\r\n    const getOneQuestion = async ()=>{\r\n        const userDetailsId = {\r\n            userId:props.userId\r\n        }\r\n        try{\r\n            const res = await Axios.post('http://localhost:8102/api/question/getOneQuestion/'+id,userDetailsId,config);\r\n            console.log(res.data);  \r\n            setValues({\r\n                question:res.data.question,\r\n                description:res.data.description\r\n            });\r\n        }catch(e){\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    const handleChange = prop => event => {\r\n        setValues({ ...values, [prop]: event.target.value });\r\n    };\r\n    \r\n    const subscribeVotes=()=>{\r\n        var sock = new SockJS('http://localhost:8102/api/ws');\r\n        stompClient = Stomp.over(sock);\r\n        sock.onopen = function() {\r\n            console.log('open');\r\n        }\r\n        stompClient.connect({}, function (frame) {\r\n            console.log('Connected: ' + frame);\r\n            stompClient.subscribe('/topic/user/question/'+id, function (greeting) {\r\n                getOneQuestion();\r\n                console.log(greeting);\r\n                \r\n            });\r\n        });\r\n    }\r\n    const editQuestionHandler = async ()=>{\r\n        const questionDetails={\r\n            question:values.question,\r\n            description:values.description,\r\n            createrId:props.userId,\r\n        }\r\n        let config = {\r\n            headers: {\r\n                \"Authorization\":\"Bearer \" + props.token,\r\n            }\r\n          }\r\n        \r\n        try{\r\n            const res = await Axios.put('http://localhost:8102/api/question/update/'+id,questionDetails,config);\r\n            console.log(res.data);  \r\n            stompClient.send(\"/app/question/votes/\"+id, {});\r\n            stompClient.send(\"/app/question/home/\"+id, {});\r\n\r\n        }catch(e){\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n\r\n    return(\r\n        <div className=\"bd\">\r\n            <Card style={{color: colors.theamFontColor,backgroundColor:colors.contentBackgroundColor}} className=\"inputCard\">\r\n                <h2 className=\"addQuestion\">Edit Question</h2>\r\n            <form>\r\n                <TextField\r\n                    id=\"outlined-email-input\"\r\n                    label=\"Question\"\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    margin=\"normal\"\r\n                    variant=\"outlined\"\r\n                    className=\"textField\"\r\n                    value={values.question}\r\n                    onChange={handleChange('question')}\r\n                    style={{\r\n                        backgroundColor: colors.bodyBackgroundColor,\r\n                        }}\r\n                        InputProps={{\r\n                            style: {\r\n                                color: colors.theamFontColor\r\n                            }\r\n                        }}\r\n                        InputLabelProps={{\r\n                            style:{\r\n                            color:colors.theamFontColor,\r\n                            }\r\n                        }}\r\n                />\r\n                <TextField\r\n                    id=\"outlined-email-input3\"\r\n                    label=\"Description\"\r\n                    type=\"text\"\r\n                    name=\"Description\"\r\n                    margin=\"normal\"\r\n                    variant=\"outlined\"\r\n                    className=\"textField\"\r\n                    value={values.description}\r\n                    onChange={handleChange('description')}\r\n                    style={{\r\n                        backgroundColor: colors.bodyBackgroundColor,\r\n                        }}\r\n                        InputProps={{\r\n                            style: {\r\n                                color: colors.theamFontColor\r\n                            }\r\n                        }}\r\n                        InputLabelProps={{\r\n                            style:{\r\n                            color:colors.theamFontColor,\r\n                            }\r\n                        }}\r\n                    />\r\n                    <Button  variant=\"contained\" id=\"button\" \r\n                        style={{color:colors.theamFontColor, backgroundColor:colors.bodyBackgroundColor}}\r\n                        onClick={editQuestionHandler}\r\n                    >Edit Question</Button>\r\n                </form>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return { \r\n      userId: state.userId.userId,\r\n      token:state.userToken.token,\r\n      colorState:state.colorState,\r\n     };\r\n  };\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    { setUserId }\r\n  )(withRouter(EditQuestion))\r\n// export default AddQuestion;","import React from 'react';\nimport './App.css';\nimport Test from './components/test';\nimport Header from './components/header/Header';\nimport Login from './components/auth/LoginPage'\nimport { BrowserRouter , Route , Switch ,Redirect} from 'react-router-dom';\nimport SignUp from './components/auth/SignUpPage';\n\nimport { Provider } from \"react-redux\";\nimport configureStore from './redux/store'\nimport Home from './components/home/Home';\nimport AddQuestion from './components/question/addQuestion/AddQuestion';\nimport OneQuestion from './components/question/oneQuestion/OneQuestion';\nimport { LastLocationProvider } from 'react-router-last-location';\nimport { Profile } from './components/profile/Profile';\nimport EditQuestion from './components/question/editQuestion/EditQuestion';\n\n\n// import {setUser,setLoginState} from './redux/actions'\nconst store = configureStore;\nconsole.log(store.getState())\nstore.subscribe(() => console.log(store.getState()))\n// store.dispatch(setLoginState(true))\n\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n  <Route {...rest} render={(props) => (\n    store.getState().userId.userId !== null\n      ? <Component {...props} />\n      : <Redirect to='/login' />\n  )} />\n)\n\nfunction App() {\n  return (\n    <Provider store={store}> \n      <div className=\"App\" >\n        <BrowserRouter>\n          <LastLocationProvider>\n                <Header/>\n              <Switch >\n                <Route exact path = \"/\" component={()=><Test />} />\n                <Route exact path = \"/login\" component={()=><Login />} />\n                <Route exact path = \"/signup\" component={()=><SignUp />} />\n                <Route exact path = \"/home\" component={()=><Home />} />\n                <PrivateRoute path='/addQuestion' component={AddQuestion} />\n                <PrivateRoute path='/oneQuestion/:id' component={OneQuestion} />\n                <Route exact path='/profile/:id' component={Profile} />\n                <PrivateRoute path='/editQuestion/:id' component={EditQuestion} />\n                {/* <Route exact path = \"/profile\" component={()=><Profile />} /> */}\n            </Switch>\n          </LastLocationProvider>\n        </BrowserRouter>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}